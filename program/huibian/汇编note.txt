参考资料：
       [1]https://blog.csdn.net/weixin_42109012/article/details/102726296?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param
--------运行--------
运行环境：Windows10 64位[DOSBOX]
1、环境配置
   参考-参考资料[1]
2、运行程序
   在"ASSEMBLY/ASM"文件夹下编写asm后缀汇编文件
   1、编译[masm hello.asm] 2、连接[link hello.asm] 3、运行[HELLO.EXE] 4、调试[debug hello.exe]
3、debug调试
   在dosbox下执行debug:
   1、
--------CPU--------
1、控制形式
   PC主板上的核心器件通过总线[地址、数据、控制总线]相连。主板的扩展卡槽外接接口卡，CPU通过总线控制外接接口卡，
   从而控制外设
--------8086--------
1、数据总线宽度:16位[一次性可传输16位数据，即2字节]、地址总线宽度:20位[寻址能力达1MB]
2、所有寄存器均为16位
--------总线--------
区分：地址总线、数据总线、控制总线
1、地址总线
   一个CPU有N根地址总线[代表CPU地址总线宽度为N, 可以寻找2的N次方个内存单元]
2、数据总线
   一个CPU有N根数据总线[代表CPU数据总线宽度为N, 可以一次传输N位二进制数据(即N/8个字节)]
3、控制总线
   一个CPU有N根控制总线[代表CPU控制总线宽度为N]
--------存储器--------
1、数据和程序在存储器中以"二进制数据"形式存放 
2、只读存储器[只读，断电后存在], 随机存储器[可读可写，断电后信息丢失]
--------寄存器--------
1、通用寄存器
   作用：存储一般性数据[AX、BX、CX、DX]，其中每个寄存器可分为两个独立的8位寄存器使用(高8，低8)
        [AX分为AH和AL, BX可分为BH和BL, CX可分为CH和CL, DX可分为DH和DL]
2、常见指令
   1、mov ax, 18 [相当于ax = 18]
   2、add ax, 7  [相当于ax = ax + 7]
   3、mov ax, bx [相当于ax = bx]
   4、add ax, bx [相当于ax = ax + bx]
3、20位地址计算
   1、组成
	  CPU使用"地址加法器"将2个16位地址[段地址:偏移地址]合成一个20位的物理地址
      物理地址 = 段地址*16 + 偏移地址[eg: 123C8H =  1230H*16 + 00C8H]
      补： cpu可用不同的段地址和偏移地址表示同一物理地址 
   2、说法
      数据存在内存1230:00c8单元中、数据再1230H段中的00c8H单元中
   3、段寄存器
      种类：CS[指令]、DS、ES、SS	
4、指令读取过程
   CS: 存放指令段地址、IP：存放指令的偏移地址
   在任意时刻，CPU将CS:IP中的内容当做指令的段地址和偏移地址，用它们合成指令的物理地址到内存中读取指令码
   [执行完后，IP会根据存储指令码的字节长度自增，以使CPU读取下一条指令]
   1、修改CS: IP
      1、完全修改
         jmp 2AE3:3 [执行完后CS为2AE3H, IP为0003H, CPU将从2AE33H处读取指令]
	  2、单独修改IP
	     jmp ax [将ax内容赋给IP]
--------常见错误--------
1、计算
   1、通用寄存器
      ax低8位al计算，进位不会到达ah中   
	  
继续学习:P35[试验1]