0、innodb逻辑存储结构
Innodb所有数据都被逻辑地存放在表空间，表空间又由段、区、页组成。
段：数据段、索引段、回滚段等。管理都是由引擎自身管理。
区：由连续的页组成，无论页多大，一个区的大小始终是1MB。
页：InnoDB磁盘管理的最小单位。默认大小为16KB，可以通过参数innodb_page_size来设置
0.1 oltp、olap、表级、行级、页级 

1、char 与 varchar
该字段数据集的平均长度与最大长度是否相差很小，若相差很小优先考虑CHAR类型，反之，考虑VARCHAR类型。
若字段存储的是MD5后的哈希值，或一些定长的值，优先选取CHAR类型。
若字段经常需要更新，则优先考虑CHAR类型，由于CHAR类型为定长，因此不容易产生碎片。
对于字段值存储很小的信息，如性别等，优先选取CHAR类型，因为VARCHAR类型会占用额外的字节保存字符串长度信息。
补充：
     VARCHAR节省了存储空间，所以对性能也有帮助。但是，由于行是变长的，在UPDATE时可能使行变得比原来更长，
	 这就导致需要做额外的工作。如果一个行占用的空间增长，并且在页内没有更多的空间可以存储，在这种情况下，
	 不同的存储引擎的处理方式是不一样的。例如，MyISAM会将行拆成不同的片段存储，InnoDB则需要分裂页来使行可以放进页内。
	 其他一些存储引擎也许从不在原数据位置更新数据，导致碎片产生。
	 
2、索引和约束
索引；一种特殊文件，可以提高数据的查询数据，但是会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件。
普通索引
唯一索引：索引列的值必须唯一，但允许有空值
主键：一张表最多只能创建一个主键；主键在唯一索引基础上，不允许非空；主键可以被其他表引用为外键。
复合主键：表中的主键含有一个以上的字段，比如：primary key(name, id)；复合主键体现在一个表中的多个字段。
区别：主键和索引都是键，主键是逻辑键，索引是物理键，所以主键实际不存在，而索引存在于数据库中。
eg：对于书，主键相当于页码，索引相当于书的目录
外键：mysql外键使用的存储引擎为innodb, 有些引擎并不支持外键; 外键可以较大程度的保证数据库数据的一致性和完整性。
      设置外键约束的两个表之间具有父子关系，即子表中外键的字段取值范围由父表决定；
	  设置外键一定程度上会降低数据库的速度；字表的外键字段的数据类型和父表要一致。

3、事务
满足条件：原子性、一致性、隔离性、持久性【过程、执行情况、并发操作、存储状态】
原子性[Atomicity]：【面向执行情况】关注状态，要么全部完成，要么全部不完成
一致性[consistency]：【面向过程状态】事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。
隔离性[isolation]：【面对并发操作】同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账
持久性[durability]：【面对存储状况】事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。
事务的并发问题：
               脏读[回滚更新]：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据
			   不可重复读[修改}：事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致。
			   幻读[新增删除]：系统管理员A将数据库中所有学生的成绩从具体分数改为ABCDE等级，但是系统管理员B就在这个时候插入了一条具体分数的记录，当系统管理员A改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读

4、三范式
第一范式(1NF)：[原子性]        字段不可再分[即一个字段只存储一项信息]
第二范式(2NF)：[拒绝部分依赖]  为了确定教室，使用"讲师"	+ "班级"作为联合主键，其实仅由班级就可确定[单个主键是不会产生部分依赖的]
第三范式[3NF]：[拒绝传递依赖]  说明教师对应班级的表，不应该出现性别、教室等无关数段。否则会出现各级推论: 主键->教师->班级->教室 
                               重新构建：表1[班级+教师]、表2[教师+班级]、表3[教师+性别+电话联系方式..]
                                 
5、存储过程
定义：一种在数据库中存储复杂程序，以便外部程序调用的一种数据库对象。
理解：数据库sql语言代码封装与重用[即函数]。

6、分区
定义：将同一表中不同行的记录分配到不同的物理文件中。同时，每个区都是独立的，可以独立处理，也可以作为一个更大对象的一部分进行处理。
特点：分区都是局部分区索引，一个分区既存放了数据，又存放了索引。
要求：如果表中存在主键或唯一索引，分区列必须是唯一索引的一个组成部分。eg： PRIMARY KEY (`id`, `partition_key`)), PARTITION BY RANGE(partition_key)。 